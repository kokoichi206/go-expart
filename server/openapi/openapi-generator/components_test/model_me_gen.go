/*
components examples

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package components_test

import (
	"encoding/json"
)

// checks if the MeGen type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MeGen{}

// MeGen struct for MeGen
type MeGen struct {
	Gen *Generation `json:"gen,omitempty"`
}

// NewMeGen instantiates a new MeGen object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMeGen() *MeGen {
	this := MeGen{}
	return &this
}

// NewMeGenWithDefaults instantiates a new MeGen object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMeGenWithDefaults() *MeGen {
	this := MeGen{}
	return &this
}

// GetGen returns the Gen field value if set, zero value otherwise.
func (o *MeGen) GetGen() Generation {
	if o == nil || IsNil(o.Gen) {
		var ret Generation
		return ret
	}
	return *o.Gen
}

// GetGenOk returns a tuple with the Gen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeGen) GetGenOk() (*Generation, bool) {
	if o == nil || IsNil(o.Gen) {
		return nil, false
	}
	return o.Gen, true
}

// HasGen returns a boolean if a field has been set.
func (o *MeGen) HasGen() bool {
	if o != nil && !IsNil(o.Gen) {
		return true
	}

	return false
}

// SetGen gets a reference to the given Generation and assigns it to the Gen field.
func (o *MeGen) SetGen(v Generation) {
	o.Gen = &v
}

func (o MeGen) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Gen) {
		toSerialize["gen"] = o.Gen
	}
	return toSerialize, nil
}

type NullableMeGen struct {
	value *MeGen
	isSet bool
}

func (v NullableMeGen) Get() *MeGen {
	return v.value
}

func (v *NullableMeGen) Set(val *MeGen) {
	v.value = val
	v.isSet = true
}

func (v NullableMeGen) IsSet() bool {
	return v.isSet
}

func (v *NullableMeGen) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeGen(val *MeGen) *NullableMeGen {
	return &NullableMeGen{value: val, isSet: true}
}

func (v NullableMeGen) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeGen) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


